{"version":3,"sources":["components/Nav.js","components/Editor.js","helpers/Main-helper.js","components/Main.js","App.js","index.js"],"names":["Nav","Menu","id","tabular","inverted","role","Header","as","Component","Editor","document","querySelector","setAttribute","height","width","mode","placeholder","theme","value","this","props","code","createHTML","rows","columns","headerRow","headerColumn","html","i","j","Main","state","undefined","render","onChange","e","preventDefault","rowsValue","columnsValue","setState","onChangeHeaderRow","onChangeHeaderColumn","onSubmit","MainHelper","removeAttribute","rowOptions","push","key","text","columnOptions","Container","className","Grid","Column","Segment","Form","Group","widths","Input","fluid","type","label","Dropdown","selection","labeled","aria-label","options","disabled","Button","icon","onClick","Icon","name","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a892ea18.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Menu, Header } from 'semantic-ui-react'\n\nexport class Nav extends Component {\n  render() {\n    return (\n      <Menu id='mainMenu' tabular inverted role='navigation'>\n        <Menu.Header id='mainHeader' as='h1'>AccessibleTableGenerator</Menu.Header>\n      </Menu>\n    )\n  }\n}\n\nexport default Nav\n","import React, { Component } from 'react'\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-html\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\nexport class Editor extends Component {\n\n  componentDidMount() {\n    const editor = document.querySelector('.ace_text-input');\n    editor.setAttribute('aria-label', 'code editor')\n  }\n\n  render() {\n    return (\n      <AceEditor \n        height='100%' \n        width='100%' \n        mode='html' \n        placeholder='Fill in inputs on the left to generate html'\n        theme=\"github\"\n        value={this.props.code}\n      />\n    );\n  }\n}\n\nexport default Editor\n","export function createHTML(rows, columns, headerRow, headerColumn) {\n  let html = ``;\n  if (rows !== 0 && columns !== 0) html += (`<table>`);\n  for (let i = 0; i < rows; i++) {\n    html += `\n  <tr>`;\n    for (let j = 0; j < columns; j++) {\n      if (i === headerRow) {\n        html += `\n    <th scope=\"col\">Column</th>`;\n      } else if (j === headerColumn) {\n        html += `\n    <th scope=\"row\">Column</th>`;\n      } else {\n        html += `\n    <td>Column</td>`;\n      }\n    }\n    html += `\n  </tr>`;\n  }\n  if (rows !== 0 && columns !== 0) html += (`\n</table>`);\n  return html;\n}\n\nexport default createHTML;","import React, { Component } from 'react'\nimport Nav from './Nav';\nimport Editor from './Editor';\nimport * as MainHelper from '../helpers/Main-helper';\n\nimport { Container, Divider, Form, Grid, Segment, Button, Icon, Dropdown, Label } from 'semantic-ui-react'\n\nexport class Main extends Component {\n\n  state = {\n    rows: undefined,\n    columns: undefined,\n    headerRow: undefined,\n    headerColumn: undefined,\n    render: false,\n    code: ``\n  }\n\n  onChange = (e) => {\n    e.preventDefault();\n    let rowsValue = document.querySelector('#rows').value;\n    let columnsValue = document.querySelector('#columns').value;\n    \n    const rows = rowsValue !== '' ? rowsValue : undefined;\n    const columns = columnsValue !== '' ? columnsValue : undefined;\n    this.setState({\n      rows: rows,\n      columns: columns\n    });\n  }\n\n  onChangeHeaderRow = (e, {value}) => {\n    this.setState({\n      headerRow: value\n    });\n  } \n\n  onChangeHeaderColumn = (e, {value}) => {\n    this.setState({\n      headerColumn: value\n    });\n  } \n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.setState({\n      render: true\n    });\n  }\n\n  createHTML = () => {\n    if (this.state.rows !== undefined && this.state.columns !== undefined) {\n      let code = MainHelper.createHTML(\n        this.state.rows, \n        this.state.columns, \n        this.state.headerRow, \n        this.state.headerColumn\n      );\n      this.setState({\n        code: code\n      });\n    }\n  }\n\n  componentDidMount() {\n    const headerRow = document.querySelector('#headerRow');\n    const headerColumn = document.querySelector('#headerColumn');\n    headerRow.removeAttribute('role');\n    headerColumn.removeAttribute('role');\n  }\n\n  render() {\n    let rowOptions = [];\n    for (let i = 0; i < this.state.rows; i++) {\n      rowOptions.push({\n        key: i+1,\n        text: i,\n        value: i\n      });\n    }\n    let columnOptions = [];\n    for (let i = 0; i < this.state.columns; i++) {\n      columnOptions.push({\n        key: i+1,\n        text: i,\n        value: i\n      });\n    }\n    return (\n      <div>\n        <Nav />\n        <Container className='heightFix' id='mainContainer'>          \n          <Grid columns='equal'>\n            <Grid.Column>\n              <Segment className='heightFix' id='mainSegment'>\n                <Form>\n                  <Form.Group widths='equal'>\n                    <Form.Input \n                      id='rows'\n                      fluid \n                      type='number' \n                      label='# of Rows'\n                      onChange={this.onChange} \n                    />\n                    <Form.Dropdown \n                      id='headerRow'\n                      fluid \n                      selection \n                      labeled={true}\n                      label='Header Row' \n                      aria-label='Header Row'\n                      options={rowOptions}\n                      disabled={this.state.rows === undefined} \n                      onChange={this.onChangeHeaderRow} \n                    />\n                  </Form.Group>\n                  <Form.Group widths='equal'>\n                    <Form.Input \n                      id='columns'\n                      fluid \n                      type='number' \n                      label='# of Columns'\n                      onChange={this.onChange} \n                    />\n                    <Form.Dropdown \n                      id='headerColumn'\n                      fluid \n                      selection \n                      label='Header Column'\n                      aria-label='Header Column'\n                      options={columnOptions}\n                      disabled={this.state.columns === undefined} \n                      onChange={this.onChangeHeaderColumn} \n                    />\n                  </Form.Group>\n                </Form>\n              </Segment>\n            </Grid.Column>\n            <Grid.Column width={2} id='wrapper'>\n              {/* <Segment id='secondarySegment' textAlign='center'> */}\n              <Button id='mainButton' icon onClick={this.createHTML}>\n                <Icon name='angle double right' aria-label='Generate HTML'/>\n              </Button>\n              {/* </Segment> */}\n            </Grid.Column>\n            <Grid.Column>\n              <Segment className='heightFix' id='tertiarySegment'>\n                <Editor \n                  rows={this.state.rows} \n                  columns={this.state.columns} \n                  headerRow={this.state.headerRow} \n                  headerColumn={this.state.headerColumn}\n                  render={this.state.render}\n                  code={this.state.code}\n                />\n              </Segment>\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom'\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Main />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}